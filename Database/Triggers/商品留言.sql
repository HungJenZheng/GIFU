IF OBJECT_ID('dbo.GOOD_MESSAGE_TRIGGER', 'TR') IS NOT NULL
	DROP TRIGGER dbo.GOOD_MESSAGE_TRIGGER
GO
CREATE TRIGGER GOOD_MESSAGE_TRIGGER ON dbo.GOOD_MESSAGE
AFTER INSERT, UPDATE
AS 
BEGIN
	IF NOT EXISTS (SELECT * FROM DELETED)
		BEGIN
			SET NOCOUNT ON
			INSERT INTO dbo.NOTIFICATION(RECEIVE_ID, SEND_ID, CONTENT, GOOD_ID, URL, [TIME])
			SELECT CASE [TYPE]
						WHEN 'Q' THEN g.[USER_ID]
						WHEN 'A' THEN (SELECT [USER_ID] FROM dbo.GOOD_MESSAGE WHERE GOOD_ID = i.GOOD_ID AND COMMENT_NO = i.COMMENT_NO AND [TYPE] = 'Q')
				   END AS RECEIVE_ID, 
				   CASE [TYPE]
						WHEN 'Q' THEN i.[USER_ID]
						WHEN 'A' THEN g.[USER_ID]
				   END AS SEND_ID, 
				   CASE [TYPE]
						WHEN 'Q' THEN REPLACE((SELECT NAME FROM dbo.CODE WHERE CODE_KIND = 'NTI' AND CODE_ID = '4'), 'XXX', '<b>'+g.TITLE+'</b>')
						WHEN 'A' THEN REPLACE((SELECT NAME FROM dbo.CODE WHERE CODE_KIND = 'NTI' AND CODE_ID = '5'), 'XXX', '<b>'+g.TITLE+'</b>')
				   END AS CONTENT,
				   i.GOOD_ID AS GOOD_ID,
				   '/Store/GoodsDetail/' + CAST(i.GOOD_ID AS varchar(20)) AS URL,
				   GETDATE() AS [TIME]
			FROM inserted i
				LEFT JOIN dbo.GOOD g 
					ON i.GOOD_ID = g.GOOD_ID
		END
END