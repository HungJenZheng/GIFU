IF OBJECT_ID('dbo.ORDER_TRIGGER', 'TR') IS NOT NULL
	DROP TRIGGER dbo.ORDER_TRIGGER
GO
CREATE TRIGGER ORDER_TRIGGER ON dbo.[ORDER]
AFTER INSERT, UPDATE
AS 
BEGIN
	--IF(UPDATE([STATUS]))
	IF EXISTS (select 1 from inserted) AND EXISTS (select 1 from deleted) AND UPDATE([STATUS])
		BEGIN
			SET NOCOUNT ON
			INSERT INTO dbo.NOTIFICATION(RECEIVE_ID, SEND_ID, CONTENT, GOOD_ID, URL, [TIME])
			SELECT i.[USER_ID] AS RECEIVE_ID, 
				   g.[USER_ID] AS SEND_ID, 
				   CASE i.[STATUS]
					 WHEN 2 THEN 
						REPLACE((SELECT NAME FROM dbo.CODE WHERE CODE_KIND = 'NTI' AND CODE_ID = '2'), 'XXX', '<b>'+g.TITLE+'</b>')
					 WHEN 3 THEN
						REPLACE((SELECT NAME FROM dbo.CODE WHERE CODE_KIND = 'NTI' AND CODE_ID = '3'), 'XXX', '<b>'+g.TITLE+'</b>')
				   END AS CONTENT,
				   i.GOOD_ID AS GOOD_ID,
				   '/Store/GoodsDetail/' + CAST(i.GOOD_ID AS varchar(20)) AS URL,
				   GETDATE() AS [TIME]
			FROM inserted i
				LEFT JOIN dbo.GOOD g 
					ON i.GOOD_ID = g.GOOD_ID
		END
	ELSE IF NOT EXISTS (SELECT * FROM DELETED)
		BEGIN
			SET NOCOUNT ON
			INSERT INTO dbo.NOTIFICATION(RECEIVE_ID, SEND_ID, CONTENT, GOOD_ID, URL, [TIME])
			SELECT g.[USER_ID] AS RECEIVE_ID, 
				   i.[USER_ID] AS SEND_ID, 
				   '<b>'+a.NAME+'</b>'+REPLACE((SELECT NAME FROM dbo.CODE WHERE CODE_KIND = 'NTI' AND CODE_ID = '1'), 'XXX', '<b>'+g.TITLE+'</b>') AS CONTENT,
				   i.GOOD_ID AS GOOD_ID,
				   '/Store/GoodsDetail/' + CAST(i.GOOD_ID AS varchar(20)) AS URL,
				   GETDATE() AS [TIME]
			FROM inserted i
				LEFT JOIN dbo.GOOD g 
					ON i.GOOD_ID = g.GOOD_ID
				LEFT JOIN dbo.ACCOUNT a
					ON i.USER_ID = a.USER_ID
		END
END